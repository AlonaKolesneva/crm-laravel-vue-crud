openapi: 3.0.3
info:
  title: home-assignment-crm
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lwiza@example.net
                password:
                  type: string
                  description: ''
                  example: s=i(Cb`.Sh
              required:
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: osborne.homenick@example.net
                password:
                  type: string
                  description: ''
                  example: 'FZa^o7S[(\qnv5|&wt'
              required:
                - email
                - password
      security: []
  /api/clients:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ktvlswlmkwtjk
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sxx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: kelly06@example.org
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: flpgwqxmievzoa
              required:
                - name
                - address
                - email
                - phone
  '/api/clients/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: grbmxlvgyooefrjzdto
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wscoh
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: melissa00@example.net
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: bfswiwnp
              required:
                - name
                - address
                - email
                - phone
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the client.'
        example: quos
        required: true
        schema:
          type: string
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
